{"ast":null,"code":"import base64 from'react-native-base64';import{firebase}from'../config/configureFirebase';import AccessKey from'./AccessKey';export var fetchPlacesAutocomplete=function fetchPlacesAutocomplete(searchKeyword){return new Promise(function(resolve,reject){var config=firebase.config;fetch(\"https://\".concat(config.projectId,\".web.app/googleapis-autocomplete\"),{method:'POST',headers:{'Content-Type':'application/json',\"Authorization\":\"Basic \"+base64.encode(config.projectId+\":\"+AccessKey)},body:JSON.stringify({\"searchKeyword\":searchKeyword})}).then(function(response){return response.json();}).then(function(json){if(json&&json.searchResults){resolve(json.searchResults);}else{reject(json.error);}}).catch(function(error){console.log(error);reject(\"fetchPlacesAutocomplete Call Error\");});});};export var fetchCoordsfromPlace=function fetchCoordsfromPlace(place_id){return new Promise(function(resolve,reject){var config=firebase.config;fetch(\"https://\".concat(config.projectId,\".web.app/googleapis-getcoords\"),{method:'POST',headers:{'Content-Type':'application/json',\"Authorization\":\"Basic \"+base64.encode(config.projectId+\":\"+AccessKey)},body:JSON.stringify({\"place_id\":place_id})}).then(function(response){return response.json();}).then(function(json){if(json&&json.coords){resolve(json.coords);}else{reject(json.error);}}).catch(function(error){console.log(error);reject(\"fetchCoordsfromPlace Call Error\");});});};export var fetchAddressfromCoords=function fetchAddressfromCoords(latlng){return new Promise(function(resolve,reject){var config=firebase.config;fetch(\"https://\".concat(config.projectId,\".web.app/googleapis-getaddress\"),{method:'POST',headers:{'Content-Type':'application/json',\"Authorization\":\"Basic \"+base64.encode(config.projectId+\":\"+AccessKey)},body:JSON.stringify({\"latlng\":latlng})}).then(function(response){return response.json();}).then(function(json){if(json&&json.address){resolve(json.address);}else{reject(json.error);}}).catch(function(error){console.log(error);reject(\"fetchAddressfromCoords Call Error\");});});};export var getDistanceMatrix=function getDistanceMatrix(startLoc,destLoc){return new Promise(function(resolve,reject){var config=firebase.config;fetch(\"https://\".concat(config.projectId,\".web.app/googleapis-getdistancematrix\"),{method:'POST',headers:{'Content-Type':'application/json',\"Authorization\":\"Basic \"+base64.encode(config.projectId+\":\"+AccessKey)},body:JSON.stringify({\"start\":startLoc,\"dest\":destLoc})}).then(function(response){return response.json();}).then(function(json){if(json.error){console.log(json.error);reject(json.error);}else{resolve(json);}}).catch(function(error){console.log(error);reject(\"getDistanceMatrix Call Error\");});});};export var getDirectionsApi=function getDirectionsApi(startLoc,destLoc,waypoints){return new Promise(function(resolve,reject){var config=firebase.config;var body={\"start\":startLoc,\"dest\":destLoc};if(waypoints){body[\"waypoints\"]=waypoints;}fetch(\"https://\".concat(config.projectId,\".web.app/googleapis-getdirections\"),{method:'POST',headers:{'Content-Type':'application/json',\"Authorization\":\"Basic \"+base64.encode(config.projectId+\":\"+AccessKey)},body:JSON.stringify(body)}).then(function(response){return response.json();}).then(function(json){if(json.hasOwnProperty('distance_in_km')){resolve(json);}else{console.log(json.error);reject(json.error);}}).catch(function(error){console.log(error);reject(\"getDirectionsApi Call Error\");});});};","map":{"version":3,"names":["base64","firebase","AccessKey","fetchPlacesAutocomplete","searchKeyword","Promise","resolve","reject","config","fetch","concat","projectId","method","headers","encode","body","JSON","stringify","then","response","json","searchResults","error","catch","console","log","fetchCoordsfromPlace","place_id","coords","fetchAddressfromCoords","latlng","address","getDistanceMatrix","startLoc","destLoc","getDirectionsApi","waypoints","hasOwnProperty"],"sources":["/Users/sumitbajaj/Downloads/TAXI-PICK/Sourcecode/common/src/other/GoogleAPIFunctions.js"],"sourcesContent":["import base64 from 'react-native-base64';\r\nimport { firebase } from '../config/configureFirebase';\r\nimport AccessKey from './AccessKey';\r\n\r\nexport const fetchPlacesAutocomplete = (searchKeyword) => {\r\n    return new Promise((resolve,reject)=>{\r\n        const { config } = firebase;\r\n        fetch(`https://${config.projectId}.web.app/googleapis-autocomplete`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": \"Basic \" + base64.encode(config.projectId + \":\" + AccessKey)\r\n            },\r\n            body: JSON.stringify({\r\n                \"searchKeyword\": searchKeyword\r\n            })\r\n        }).then(response => {\r\n            return response.json();\r\n        })\r\n        .then(json => {\r\n            if(json && json.searchResults) {\r\n                resolve(json.searchResults);\r\n            }else{\r\n                reject(json.error);\r\n            }\r\n        }).catch(error=>{\r\n            console.log(error);\r\n            reject(\"fetchPlacesAutocomplete Call Error\")\r\n        })\r\n    });\r\n}\r\n\r\nexport const fetchCoordsfromPlace = (place_id) => {\r\n    return new Promise((resolve,reject)=>{\r\n        const { config } = firebase;\r\n        fetch(`https://${config.projectId}.web.app/googleapis-getcoords`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": \"Basic \" + base64.encode(config.projectId + \":\" + AccessKey)\r\n            },\r\n            body: JSON.stringify({\r\n                \"place_id\": place_id\r\n            })\r\n        }).then(response => {\r\n            return response.json();\r\n        })\r\n        .then(json => {\r\n            if(json && json.coords) {\r\n                resolve(json.coords);\r\n            }else{\r\n                reject(json.error);\r\n            }\r\n        }).catch(error=>{\r\n            console.log(error);\r\n            reject(\"fetchCoordsfromPlace Call Error\")\r\n        })\r\n    });\r\n}\r\n\r\n\r\nexport const fetchAddressfromCoords = (latlng) => {\r\n    return new Promise((resolve,reject)=>{\r\n        const { config } = firebase;\r\n        fetch(`https://${config.projectId}.web.app/googleapis-getaddress`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": \"Basic \" + base64.encode(config.projectId + \":\" + AccessKey)\r\n            },\r\n            body: JSON.stringify({\r\n                \"latlng\": latlng\r\n            })\r\n        }).then(response => {\r\n            return response.json();\r\n        })\r\n        .then(json => {\r\n            if(json && json.address) {\r\n                resolve(json.address);\r\n            }else{\r\n                reject(json.error);\r\n            }\r\n        }).catch(error=>{\r\n            console.log(error);\r\n            reject(\"fetchAddressfromCoords Call Error\")\r\n        })\r\n    });\r\n}\r\n\r\nexport const getDistanceMatrix = (startLoc, destLoc) => {\r\n    return new Promise((resolve,reject)=>{\r\n        const { config } = firebase;\r\n        fetch(`https://${config.projectId}.web.app/googleapis-getdistancematrix`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": \"Basic \" + base64.encode(config.projectId + \":\" + AccessKey)\r\n            },\r\n            body: JSON.stringify({\r\n                \"start\": startLoc,\r\n                \"dest\": destLoc\r\n            })\r\n        }).then(response => {\r\n            return response.json();\r\n        })\r\n        .then(json => {\r\n            if(json.error){\r\n                console.log(json.error);\r\n                reject(json.error);\r\n            }else{\r\n                resolve(json);\r\n            }\r\n        }).catch(error=>{\r\n            console.log(error);\r\n            reject(\"getDistanceMatrix Call Error\")\r\n        })\r\n    });\r\n}\r\n\r\nexport const getDirectionsApi = (startLoc, destLoc, waypoints) => {\r\n    return new Promise((resolve,reject)=>{\r\n        const { config } = firebase;\r\n        const body = {\r\n            \"start\": startLoc,\r\n            \"dest\": destLoc\r\n        };\r\n        if(waypoints){\r\n            body[\"waypoints\"] = waypoints;\r\n        }\r\n        fetch(`https://${config.projectId}.web.app/googleapis-getdirections`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": \"Basic \" + base64.encode(config.projectId + \":\" + AccessKey)\r\n            },\r\n            body: JSON.stringify(body)\r\n        }).then(response => {\r\n            return response.json();\r\n        })\r\n        .then(json => {\r\n            if (json.hasOwnProperty('distance_in_km')) {\r\n                resolve(json);\r\n            }else{\r\n                console.log(json.error);\r\n                reject(json.error);\r\n            }\r\n        }).catch(error=>{\r\n            console.log(error);\r\n            reject(\"getDirectionsApi Call Error\")\r\n        })\r\n    });\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}