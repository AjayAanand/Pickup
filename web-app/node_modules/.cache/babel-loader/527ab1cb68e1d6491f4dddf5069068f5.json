{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sumitbajaj/Downloads/TAXI-PICK/Sourcecode/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/sumitbajaj/Downloads/TAXI-PICK/Sourcecode/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{FETCH_ADDRESSES,FETCH_ADDRESSES_SUCCESS,FETCH_ADDRESSES_FAILED,EDIT_ADDRESS}from\"../store/types\";import store from'../store/store';import{firebase}from'../config/configureFirebase';import{onValue,remove,push,off}from\"firebase/database\";export var fetchAddresses=function fetchAddresses(){return function(dispatch){var addressEditRef=firebase.addressEditRef;dispatch({type:FETCH_ADDRESSES,payload:null});var userInfo=store.getState().auth.profile;off(addressEditRef(userInfo.uid));onValue(addressEditRef(userInfo.uid),function(snapshot){if(snapshot.val()){var data=snapshot.val();var arr=Object.keys(data).map(function(i){data[i].id=i;return data[i];});dispatch({type:FETCH_ADDRESSES_SUCCESS,payload:arr});}else{dispatch({type:FETCH_ADDRESSES_FAILED,payload:store.getState().languagedata.defaultLanguage.no_address});}});};};export var editAddress=function editAddress(uid,address,method){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch){var addressRef,addressEditRef;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:addressRef=firebase.addressRef,addressEditRef=firebase.addressEditRef;dispatch({type:EDIT_ADDRESS,payload:{method:method,address:address}});if(method==='Add'){push(addressEditRef(uid),address);}else if(method==='Delete'){remove(addressRef(uid,address.id));}case 3:case\"end\":return _context.stop();}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"names":["FETCH_ADDRESSES","FETCH_ADDRESSES_SUCCESS","FETCH_ADDRESSES_FAILED","EDIT_ADDRESS","store","firebase","onValue","remove","push","off","fetchAddresses","dispatch","addressEditRef","type","payload","userInfo","getState","auth","profile","uid","snapshot","val","data","arr","Object","keys","map","i","id","languagedata","defaultLanguage","no_address","editAddress","address","method","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","addressRef","wrap","_callee$","_context","prev","next","stop","_x","apply","arguments"],"sources":["/Users/sumitbajaj/Downloads/TAXI-PICK/Sourcecode/common/src/actions/addressactions.js"],"sourcesContent":["import {\r\n    FETCH_ADDRESSES,\r\n    FETCH_ADDRESSES_SUCCESS,\r\n    FETCH_ADDRESSES_FAILED,\r\n    EDIT_ADDRESS\r\n  } from \"../store/types\";\r\n  import store from '../store/store';\r\n  import { firebase } from '../config/configureFirebase';\r\n  import { onValue, remove, push, off } from \"firebase/database\";\r\n  \r\n  export const fetchAddresses = () => (dispatch) => {\r\n  \r\n    const {\r\n      addressEditRef\r\n    } = firebase;\r\n    dispatch({\r\n      type: FETCH_ADDRESSES,\r\n      payload: null\r\n    });\r\n    const userInfo = store.getState().auth.profile;\r\n    off(addressEditRef(userInfo.uid));\r\n    onValue(addressEditRef(userInfo.uid), snapshot => {\r\n      if (snapshot.val()) {\r\n        let data = snapshot.val();\r\n        const arr = Object.keys(data).map(i => {\r\n          data[i].id = i;\r\n          return data[i]\r\n        });\r\n        dispatch({\r\n          type: FETCH_ADDRESSES_SUCCESS,\r\n          payload: arr\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: FETCH_ADDRESSES_FAILED,\r\n          payload: store.getState().languagedata.defaultLanguage.no_address\r\n        });\r\n      }\r\n    });\r\n  };\r\n  \r\n  export const editAddress = (uid, address, method) => async (dispatch) => {\r\n    const {\r\n      addressRef, \r\n      addressEditRef,\r\n    } = firebase;\r\n    dispatch({\r\n      type: EDIT_ADDRESS,\r\n      payload: { method, address }\r\n    });\r\n    if (method === 'Add') {\r\n      push(addressEditRef(uid), address);\r\n    } else if (method === 'Delete') {\r\n      remove(addressRef(uid, address.id));\r\n    }\r\n  }"],"mappings":"4RAAA,OACIA,eAAe,CACfC,uBAAuB,CACvBC,sBAAsB,CACtBC,YAAY,KACP,gBAAgB,CACvB,MAAO,CAAAC,KAAK,KAAM,gBAAgB,CAClC,OAASC,QAAQ,KAAQ,6BAA6B,CACtD,OAASC,OAAO,CAAEC,MAAM,CAAEC,IAAI,CAAEC,GAAG,KAAQ,mBAAmB,CAE9D,MAAO,IAAM,CAAAC,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAA,QAAS,UAACC,QAAQ,CAAK,CAEhD,GACE,CAAAC,cAAc,CACZP,QAAQ,CADVO,cAAc,CAEhBD,QAAQ,CAAC,CACPE,IAAI,CAAEb,eAAe,CACrBc,OAAO,CAAE,IACX,CAAC,CAAC,CACF,GAAM,CAAAC,QAAQ,CAAGX,KAAK,CAACY,QAAQ,EAAE,CAACC,IAAI,CAACC,OAAO,CAC9CT,GAAG,CAACG,cAAc,CAACG,QAAQ,CAACI,GAAG,CAAC,CAAC,CACjCb,OAAO,CAACM,cAAc,CAACG,QAAQ,CAACI,GAAG,CAAC,CAAE,SAAAC,QAAQ,CAAI,CAChD,GAAIA,QAAQ,CAACC,GAAG,EAAE,CAAE,CAClB,GAAI,CAAAC,IAAI,CAAGF,QAAQ,CAACC,GAAG,EAAE,CACzB,GAAM,CAAAE,GAAG,CAAGC,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,GAAG,CAAC,SAAAC,CAAC,CAAI,CACrCL,IAAI,CAACK,CAAC,CAAC,CAACC,EAAE,CAAGD,CAAC,CACd,MAAO,CAAAL,IAAI,CAACK,CAAC,CAAC,CAChB,CAAC,CAAC,CACFhB,QAAQ,CAAC,CACPE,IAAI,CAAEZ,uBAAuB,CAC7Ba,OAAO,CAAES,GACX,CAAC,CAAC,CACJ,CAAC,IAAM,CACLZ,QAAQ,CAAC,CACPE,IAAI,CAAEX,sBAAsB,CAC5BY,OAAO,CAAEV,KAAK,CAACY,QAAQ,EAAE,CAACa,YAAY,CAACC,eAAe,CAACC,UACzD,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CACJ,CAAC,GAED,MAAO,IAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAIb,GAAG,CAAEc,OAAO,CAAEC,MAAM,oCAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAK,SAAAC,QAAO5B,QAAQ,MAAA6B,UAAA,CAAA5B,cAAA,QAAAyB,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAEhEL,UAAU,CAERnC,QAAQ,CAFVmC,UAAU,CACV5B,cAAc,CACZP,QAAQ,CADVO,cAAc,CAEhBD,QAAQ,CAAC,CACPE,IAAI,CAAEV,YAAY,CAClBW,OAAO,CAAE,CAAEoB,MAAM,CAANA,MAAM,CAAED,OAAO,CAAPA,OAAQ,CAC7B,CAAC,CAAC,CACF,GAAIC,MAAM,GAAK,KAAK,CAAE,CACpB1B,IAAI,CAACI,cAAc,CAACO,GAAG,CAAC,CAAEc,OAAO,CAAC,CACpC,CAAC,IAAM,IAAIC,MAAM,GAAK,QAAQ,CAAE,CAC9B3B,MAAM,CAACiC,UAAU,CAACrB,GAAG,CAAEc,OAAO,CAACL,EAAE,CAAC,CAAC,CACrC,CAAC,wBAAAe,QAAA,CAAAG,IAAA,MAAAP,OAAA,GACF,mBAAAQ,EAAA,SAAAZ,IAAA,CAAAa,KAAA,MAAAC,SAAA"},"metadata":{},"sourceType":"module"}