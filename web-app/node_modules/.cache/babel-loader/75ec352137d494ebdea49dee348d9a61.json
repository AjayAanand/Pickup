{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sumitbajaj/Downloads/TAXI-PICK/Sourcecode/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/sumitbajaj/Downloads/TAXI-PICK/Sourcecode/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{FETCH_PAYMENT_METHODS,FETCH_PAYMENT_METHODS_SUCCESS,FETCH_PAYMENT_METHODS_FAILED,UPDATE_WALLET_BALANCE,UPDATE_WALLET_BALANCE_SUCCESS,UPDATE_WALLET_BALANCE_FAILED,CLEAR_PAYMENT_MESSAGES}from\"../store/types\";import{RequestPushMsg}from'../other/NotificationFunctions';import{firebase}from'../config/configureFirebase';import store from'../store/store';import{onValue,get,update,push}from\"firebase/database\";export var fetchPaymentMethods=function fetchPaymentMethods(){return function(dispatch){var config=firebase.config;dispatch({type:FETCH_PAYMENT_METHODS,payload:null});var settings=store.getState().settingsdata.settings;var host=window&&window.location&&settings.CompanyWebsite===window.location.origin?window.location.origin:\"https://\".concat(config.projectId,\".web.app\");var url=\"\".concat(host,\"/get_providers\");fetch(url,{method:'GET',headers:{'Content-Type':'application/json'}}).then(function(response){return response.json();}).then(function(responseJson){if(responseJson.length>0){dispatch({type:FETCH_PAYMENT_METHODS_SUCCESS,payload:responseJson});}else{dispatch({type:FETCH_PAYMENT_METHODS_FAILED,payload:store.getState().languagedata.defaultLanguage.no_provider_found});}}).catch(function(error){dispatch({type:FETCH_PAYMENT_METHODS_FAILED,payload:store.getState().languagedata.defaultLanguage.provider_fetch_error+\": \"+error.toString()});});};};export var clearMessage=function clearMessage(){return function(dispatch){dispatch({type:CLEAR_PAYMENT_MESSAGES,payload:null});};};export var addToWallet=function addToWallet(uid,amount){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch){var walletHistoryRef,singleUserRef,settingsRef,settingsdata,settings;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:walletHistoryRef=firebase.walletHistoryRef,singleUserRef=firebase.singleUserRef,settingsRef=firebase.settingsRef;dispatch({type:UPDATE_WALLET_BALANCE,payload:null});_context.next=4;return get(settingsRef);case 4:settingsdata=_context.sent;settings=settingsdata.val();onValue(singleUserRef(uid),function(snapshot){if(snapshot.val()){var walletBalance=parseFloat(snapshot.val().walletBalance);var pushToken=snapshot.val().pushToken;walletBalance=parseFloat((parseFloat(walletBalance)+parseFloat(amount)).toFixed(settings.decimal));var details={type:'Credit',amount:parseFloat(amount),date:new Date().getTime(),txRef:'AdminCredit'};update(singleUserRef(uid),{walletBalance:walletBalance}).then(function(){push(walletHistoryRef(uid),details).then(function(){dispatch({type:UPDATE_WALLET_BALANCE_SUCCESS,payload:null});}).catch(function(error){dispatch({type:UPDATE_WALLET_BALANCE_FAILED,payload:error.code+\": \"+error.message});});if(pushToken){RequestPushMsg(pushToken,{title:store.getState().languagedata.defaultLanguage.notification_title,msg:store.getState().languagedata.defaultLanguage.wallet_updated,screen:'Wallet'});}}).catch(function(error){dispatch({type:UPDATE_WALLET_BALANCE_FAILED,payload:error.code+\": \"+error.message});});}},{onlyOnce:true});case 7:case\"end\":return _context.stop();}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var withdrawBalance=function withdrawBalance(profile,amount){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch){var withdrawRef;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:withdrawRef=firebase.withdrawRef;dispatch({type:UPDATE_WALLET_BALANCE,payload:null});push(withdrawRef,{uid:profile.uid,name:profile.firstName+' '+profile.lastName,amount:parseFloat(amount),date:new Date().getTime(),bankName:profile.bankName?profile.bankName:'',bankCode:profile.bankCode?profile.bankCode:'',bankAccount:profile.bankAccount?profile.bankAccount:'',processed:false});case 3:case\"end\":return _context2.stop();}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};","map":{"version":3,"names":["FETCH_PAYMENT_METHODS","FETCH_PAYMENT_METHODS_SUCCESS","FETCH_PAYMENT_METHODS_FAILED","UPDATE_WALLET_BALANCE","UPDATE_WALLET_BALANCE_SUCCESS","UPDATE_WALLET_BALANCE_FAILED","CLEAR_PAYMENT_MESSAGES","RequestPushMsg","firebase","store","onValue","get","update","push","fetchPaymentMethods","dispatch","config","type","payload","settings","getState","settingsdata","host","window","location","CompanyWebsite","origin","concat","projectId","url","fetch","method","headers","then","response","json","responseJson","length","languagedata","defaultLanguage","no_provider_found","catch","error","provider_fetch_error","toString","clearMessage","addToWallet","uid","amount","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","walletHistoryRef","singleUserRef","settingsRef","wrap","_callee$","_context","prev","next","sent","val","snapshot","walletBalance","parseFloat","pushToken","toFixed","decimal","details","date","Date","getTime","txRef","code","message","title","notification_title","msg","wallet_updated","screen","onlyOnce","stop","_x","apply","arguments","withdrawBalance","profile","_ref2","_callee2","withdrawRef","_callee2$","_context2","name","firstName","lastName","bankName","bankCode","bankAccount","processed","_x2"],"sources":["/Users/sumitbajaj/Downloads/TAXI-PICK/Sourcecode/common/src/actions/paymentactions.js"],"sourcesContent":["import {\r\n    FETCH_PAYMENT_METHODS,\r\n    FETCH_PAYMENT_METHODS_SUCCESS,\r\n    FETCH_PAYMENT_METHODS_FAILED,\r\n    UPDATE_WALLET_BALANCE,\r\n    UPDATE_WALLET_BALANCE_SUCCESS,\r\n    UPDATE_WALLET_BALANCE_FAILED,\r\n    CLEAR_PAYMENT_MESSAGES\r\n} from \"../store/types\";\r\nimport { RequestPushMsg } from '../other/NotificationFunctions';\r\nimport { firebase } from '../config/configureFirebase';\r\nimport store from '../store/store';\r\nimport { onValue, get, update, push } from \"firebase/database\";\r\n\r\nexport const fetchPaymentMethods = () => (dispatch) => {\r\n   \r\n    const {\r\n        config\r\n    } = firebase;\r\n \r\n    dispatch({\r\n        type: FETCH_PAYMENT_METHODS,\r\n        payload: null,\r\n    });\r\n    \r\n    const settings = store.getState().settingsdata.settings;\r\n    let host = window && window.location && settings.CompanyWebsite === window.location.origin? window.location.origin : `https://${config.projectId}.web.app`\r\n    let url = `${host}/get_providers`;\r\n    fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            if (responseJson.length > 0) {\r\n                dispatch({\r\n                    type: FETCH_PAYMENT_METHODS_SUCCESS,\r\n                    payload: responseJson,\r\n                });\r\n            }else{\r\n                dispatch({\r\n                    type: FETCH_PAYMENT_METHODS_FAILED,\r\n                    payload: store.getState().languagedata.defaultLanguage.no_provider_found,\r\n                });\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            dispatch({\r\n                type: FETCH_PAYMENT_METHODS_FAILED,\r\n                payload: store.getState().languagedata.defaultLanguage.provider_fetch_error + \": \" + error.toString(),\r\n            });\r\n        });\r\n};\r\n\r\nexport const clearMessage = () => (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_PAYMENT_MESSAGES,\r\n        payload: null,\r\n    });    \r\n};\r\n\r\n\r\nexport const addToWallet = (uid, amount) => async (dispatch) => {\r\n    const {\r\n        walletHistoryRef,\r\n        singleUserRef,\r\n        settingsRef\r\n    } = firebase;\r\n\r\n    dispatch({\r\n        type: UPDATE_WALLET_BALANCE,\r\n        payload: null\r\n    });\r\n\r\n    const settingsdata = await get(settingsRef);\r\n    const settings = settingsdata.val();\r\n\r\n    onValue(singleUserRef(uid), snapshot => {\r\n        if (snapshot.val()) {\r\n            let walletBalance = parseFloat(snapshot.val().walletBalance);\r\n            const pushToken = snapshot.val().pushToken;\r\n            walletBalance = parseFloat((parseFloat(walletBalance) + parseFloat(amount)).toFixed(settings.decimal));\r\n            let details = {\r\n                type: 'Credit',\r\n                amount: parseFloat(amount),\r\n                date: new Date().getTime(),\r\n                txRef: 'AdminCredit'\r\n            }\r\n            update(singleUserRef(uid),{walletBalance: walletBalance}).then(() => {\r\n                push(walletHistoryRef(uid), details).then(()=>{\r\n                    dispatch({\r\n                        type: UPDATE_WALLET_BALANCE_SUCCESS,\r\n                        payload: null\r\n                    });\r\n                }).catch(error=>{\r\n                    dispatch({\r\n                        type: UPDATE_WALLET_BALANCE_FAILED,\r\n                        payload: error.code + \": \" + error.message,\r\n                    });            \r\n                })\r\n                if(pushToken){\r\n                    RequestPushMsg(\r\n                        pushToken,\r\n                        {\r\n                            title: store.getState().languagedata.defaultLanguage.notification_title,\r\n                            msg:  store.getState().languagedata.defaultLanguage.wallet_updated,\r\n                            screen: 'Wallet'\r\n                        }\r\n                    );\r\n                }\r\n            }).catch(error=>{\r\n                dispatch({\r\n                    type: UPDATE_WALLET_BALANCE_FAILED,\r\n                    payload: error.code + \": \" + error.message,\r\n                });\r\n            });\r\n            \r\n        }\r\n    }, {onlyOnce: true});\r\n};\r\n\r\n\r\nexport const withdrawBalance = (profile, amount) => async (dispatch) => {\r\n\r\n    const {\r\n        withdrawRef,\r\n    } = firebase;\r\n    \r\n    dispatch({\r\n        type: UPDATE_WALLET_BALANCE,\r\n        payload: null\r\n    });\r\n\r\n    push(withdrawRef, {\r\n        uid : profile.uid,\r\n        name : profile.firstName +  ' ' + profile.lastName,\r\n        amount : parseFloat(amount),\r\n        date : new Date().getTime(),\r\n        bankName : profile.bankName? profile.bankName : '',\r\n        bankCode : profile.bankCode? profile.bankCode : '',\r\n        bankAccount : profile.bankAccount? profile.bankAccount : '',\r\n        processed:false\r\n    });\r\n       \r\n};\r\n"],"mappings":"4RAAA,OACIA,qBAAqB,CACrBC,6BAA6B,CAC7BC,4BAA4B,CAC5BC,qBAAqB,CACrBC,6BAA6B,CAC7BC,4BAA4B,CAC5BC,sBAAsB,KACnB,gBAAgB,CACvB,OAASC,cAAc,KAAQ,gCAAgC,CAC/D,OAASC,QAAQ,KAAQ,6BAA6B,CACtD,MAAO,CAAAC,KAAK,KAAM,gBAAgB,CAClC,OAASC,OAAO,CAAEC,GAAG,CAAEC,MAAM,CAAEC,IAAI,KAAQ,mBAAmB,CAE9D,MAAO,IAAM,CAAAC,mBAAmB,CAAG,QAAtB,CAAAA,mBAAmBA,CAAA,QAAS,UAACC,QAAQ,CAAK,CAEnD,GACI,CAAAC,MAAM,CACNR,QAAQ,CADRQ,MAAM,CAGVD,QAAQ,CAAC,CACLE,IAAI,CAAEjB,qBAAqB,CAC3BkB,OAAO,CAAE,IACb,CAAC,CAAC,CAEF,GAAM,CAAAC,QAAQ,CAAGV,KAAK,CAACW,QAAQ,EAAE,CAACC,YAAY,CAACF,QAAQ,CACvD,GAAI,CAAAG,IAAI,CAAGC,MAAM,EAAIA,MAAM,CAACC,QAAQ,EAAIL,QAAQ,CAACM,cAAc,GAAKF,MAAM,CAACC,QAAQ,CAACE,MAAM,CAAEH,MAAM,CAACC,QAAQ,CAACE,MAAM,YAAAC,MAAA,CAAcX,MAAM,CAACY,SAAS,YAAU,CAC1J,GAAI,CAAAC,GAAG,IAAAF,MAAA,CAAML,IAAI,kBAAgB,CACjCQ,KAAK,CAACD,GAAG,CAAE,CACPE,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CACJ,CAAC,CAAC,CACGC,IAAI,CAAC,SAACC,QAAQ,QAAK,CAAAA,QAAQ,CAACC,IAAI,EAAE,GAAC,CACnCF,IAAI,CAAC,SAACG,YAAY,CAAK,CACpB,GAAIA,YAAY,CAACC,MAAM,CAAG,CAAC,CAAE,CACzBtB,QAAQ,CAAC,CACLE,IAAI,CAAEhB,6BAA6B,CACnCiB,OAAO,CAAEkB,YACb,CAAC,CAAC,CACN,CAAC,IAAI,CACDrB,QAAQ,CAAC,CACLE,IAAI,CAAEf,4BAA4B,CAClCgB,OAAO,CAAET,KAAK,CAACW,QAAQ,EAAE,CAACkB,YAAY,CAACC,eAAe,CAACC,iBAC3D,CAAC,CAAC,CACN,CACJ,CAAC,CAAC,CACDC,KAAK,CAAC,SAACC,KAAK,CAAK,CACd3B,QAAQ,CAAC,CACLE,IAAI,CAAEf,4BAA4B,CAClCgB,OAAO,CAAET,KAAK,CAACW,QAAQ,EAAE,CAACkB,YAAY,CAACC,eAAe,CAACI,oBAAoB,CAAG,IAAI,CAAGD,KAAK,CAACE,QAAQ,EACvG,CAAC,CAAC,CACN,CAAC,CAAC,CACV,CAAC,GAED,MAAO,IAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAA,QAAS,UAAC9B,QAAQ,CAAK,CAC5CA,QAAQ,CAAC,CACLE,IAAI,CAAEX,sBAAsB,CAC5BY,OAAO,CAAE,IACb,CAAC,CAAC,CACN,CAAC,GAGD,MAAO,IAAM,CAAA4B,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAIC,GAAG,CAAEC,MAAM,oCAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAK,SAAAC,QAAOtC,QAAQ,MAAAuC,gBAAA,CAAAC,aAAA,CAAAC,WAAA,CAAAnC,YAAA,CAAAF,QAAA,QAAAgC,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAEnDP,gBAAgB,CAGhB9C,QAAQ,CAHR8C,gBAAgB,CAChBC,aAAa,CAEb/C,QAAQ,CAFR+C,aAAa,CACbC,WAAW,CACXhD,QAAQ,CADRgD,WAAW,CAGfzC,QAAQ,CAAC,CACLE,IAAI,CAAEd,qBAAqB,CAC3Be,OAAO,CAAE,IACb,CAAC,CAAC,CAACyC,QAAA,CAAAE,IAAA,SAEwB,CAAAlD,GAAG,CAAC6C,WAAW,CAAC,QAArCnC,YAAY,CAAAsC,QAAA,CAAAG,IAAA,CACZ3C,QAAQ,CAAGE,YAAY,CAAC0C,GAAG,EAAE,CAEnCrD,OAAO,CAAC6C,aAAa,CAACR,GAAG,CAAC,CAAE,SAAAiB,QAAQ,CAAI,CACpC,GAAIA,QAAQ,CAACD,GAAG,EAAE,CAAE,CAChB,GAAI,CAAAE,aAAa,CAAGC,UAAU,CAACF,QAAQ,CAACD,GAAG,EAAE,CAACE,aAAa,CAAC,CAC5D,GAAM,CAAAE,SAAS,CAAGH,QAAQ,CAACD,GAAG,EAAE,CAACI,SAAS,CAC1CF,aAAa,CAAGC,UAAU,CAAC,CAACA,UAAU,CAACD,aAAa,CAAC,CAAGC,UAAU,CAAClB,MAAM,CAAC,EAAEoB,OAAO,CAACjD,QAAQ,CAACkD,OAAO,CAAC,CAAC,CACtG,GAAI,CAAAC,OAAO,CAAG,CACVrD,IAAI,CAAE,QAAQ,CACd+B,MAAM,CAAEkB,UAAU,CAAClB,MAAM,CAAC,CAC1BuB,IAAI,CAAE,GAAI,CAAAC,IAAI,EAAE,CAACC,OAAO,EAAE,CAC1BC,KAAK,CAAE,aACX,CAAC,CACD9D,MAAM,CAAC2C,aAAa,CAACR,GAAG,CAAC,CAAC,CAACkB,aAAa,CAAEA,aAAa,CAAC,CAAC,CAAChC,IAAI,CAAC,UAAM,CACjEpB,IAAI,CAACyC,gBAAgB,CAACP,GAAG,CAAC,CAAEuB,OAAO,CAAC,CAACrC,IAAI,CAAC,UAAI,CAC1ClB,QAAQ,CAAC,CACLE,IAAI,CAAEb,6BAA6B,CACnCc,OAAO,CAAE,IACb,CAAC,CAAC,CACN,CAAC,CAAC,CAACuB,KAAK,CAAC,SAAAC,KAAK,CAAE,CACZ3B,QAAQ,CAAC,CACLE,IAAI,CAAEZ,4BAA4B,CAClCa,OAAO,CAAEwB,KAAK,CAACiC,IAAI,CAAG,IAAI,CAAGjC,KAAK,CAACkC,OACvC,CAAC,CAAC,CACN,CAAC,CAAC,CACF,GAAGT,SAAS,CAAC,CACT5D,cAAc,CACV4D,SAAS,CACT,CACIU,KAAK,CAAEpE,KAAK,CAACW,QAAQ,EAAE,CAACkB,YAAY,CAACC,eAAe,CAACuC,kBAAkB,CACvEC,GAAG,CAAGtE,KAAK,CAACW,QAAQ,EAAE,CAACkB,YAAY,CAACC,eAAe,CAACyC,cAAc,CAClEC,MAAM,CAAE,QACZ,CAAC,CACJ,CACL,CACJ,CAAC,CAAC,CAACxC,KAAK,CAAC,SAAAC,KAAK,CAAE,CACZ3B,QAAQ,CAAC,CACLE,IAAI,CAAEZ,4BAA4B,CAClCa,OAAO,CAAEwB,KAAK,CAACiC,IAAI,CAAG,IAAI,CAAGjC,KAAK,CAACkC,OACvC,CAAC,CAAC,CACN,CAAC,CAAC,CAEN,CACJ,CAAC,CAAE,CAACM,QAAQ,CAAE,IAAI,CAAC,CAAC,CAAC,wBAAAvB,QAAA,CAAAwB,IAAA,MAAA9B,OAAA,GACxB,mBAAA+B,EAAA,SAAAnC,IAAA,CAAAoC,KAAA,MAAAC,SAAA,UAGD,MAAO,IAAM,CAAAC,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAIC,OAAO,CAAExC,MAAM,oCAAAyC,KAAA,CAAAvC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAK,SAAAsC,SAAO3E,QAAQ,MAAA4E,WAAA,QAAAxC,mBAAA,GAAAM,IAAA,UAAAmC,UAAAC,SAAA,iBAAAA,SAAA,CAAAjC,IAAA,CAAAiC,SAAA,CAAAhC,IAAA,SAG3D8B,WAAW,CACXnF,QAAQ,CADRmF,WAAW,CAGf5E,QAAQ,CAAC,CACLE,IAAI,CAAEd,qBAAqB,CAC3Be,OAAO,CAAE,IACb,CAAC,CAAC,CAEFL,IAAI,CAAC8E,WAAW,CAAE,CACd5C,GAAG,CAAGyC,OAAO,CAACzC,GAAG,CACjB+C,IAAI,CAAGN,OAAO,CAACO,SAAS,CAAI,GAAG,CAAGP,OAAO,CAACQ,QAAQ,CAClDhD,MAAM,CAAGkB,UAAU,CAAClB,MAAM,CAAC,CAC3BuB,IAAI,CAAG,GAAI,CAAAC,IAAI,EAAE,CAACC,OAAO,EAAE,CAC3BwB,QAAQ,CAAGT,OAAO,CAACS,QAAQ,CAAET,OAAO,CAACS,QAAQ,CAAG,EAAE,CAClDC,QAAQ,CAAGV,OAAO,CAACU,QAAQ,CAAEV,OAAO,CAACU,QAAQ,CAAG,EAAE,CAClDC,WAAW,CAAGX,OAAO,CAACW,WAAW,CAAEX,OAAO,CAACW,WAAW,CAAG,EAAE,CAC3DC,SAAS,CAAC,KACd,CAAC,CAAC,CAAC,wBAAAP,SAAA,CAAAV,IAAA,MAAAO,QAAA,GAEN,mBAAAW,GAAA,SAAAZ,KAAA,CAAAJ,KAAA,MAAAC,SAAA"},"metadata":{},"sourceType":"module"}