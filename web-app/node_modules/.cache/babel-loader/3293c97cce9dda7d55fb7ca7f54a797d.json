{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sumitbajaj/Downloads/TAXI-PICK/Sourcecode/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/sumitbajaj/Downloads/TAXI-PICK/Sourcecode/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";export var GetDistance=function GetDistance(lat1,lon1,lat2,lon2){if(lat1===lat2&&lon1===lon2){return 0;}else{var radlat1=Math.PI*lat1/180;var radlat2=Math.PI*lat2/180;var theta=lon1-lon2;var radtheta=Math.PI*theta/180;var dist=Math.sin(radlat1)*Math.sin(radlat2)+Math.cos(radlat1)*Math.cos(radlat2)*Math.cos(radtheta);if(dist>1){dist=1;}dist=Math.acos(dist);dist=dist*180/Math.PI;dist=dist*60*1.1515;dist=dist*1.609344;return dist;}};export var GetTripDistance=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(data){var arr,distance,coords,i;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:if(!data){_context.next=8;break;}arr=Object.keys(data).filter(function(i){return data[i].status=='STARTED'||data[i].status=='REACHED';}).map(function(i){data[i].id=i;return data[i];});distance=0;coords=[];try{if(arr.length==0||arr.length==1){distance=0;}else if(arr.length==2){distance=GetDistance(arr[0].lat,arr[0].lng,arr[1].lat,arr[1].lng);coords.push({latitude:arr[0].lat,longitude:arr[0].lng});coords.push({latitude:arr[1].lat,longitude:arr[1].lng});}else{for(i=0;i<arr.length-1;i++){distance=distance+GetDistance(arr[i].lat,arr[i].lng,arr[i+1].lat,arr[i+1].lng);coords.push({latitude:arr[i].lat,longitude:arr[i].lng});}coords.push({latitude:arr[arr.length-1].lat,longitude:arr[arr.length-1].lng});}}catch(error){console.log(error);}return _context.abrupt(\"return\",{distance:distance,coords:coords});case 8:return _context.abrupt(\"return\",{distance:0,coords:[]});case 9:case\"end\":return _context.stop();}},_callee);}));return function GetTripDistance(_x){return _ref.apply(this,arguments);};}();","map":{"version":3,"names":["GetDistance","lat1","lon1","lat2","lon2","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","GetTripDistance","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","arr","distance","coords","i","wrap","_callee$","_context","prev","next","Object","keys","filter","status","map","id","length","lat","lng","push","latitude","longitude","error","console","log","abrupt","stop","_x","apply","arguments"],"sources":["/Users/sumitbajaj/Downloads/TAXI-PICK/Sourcecode/common/src/other/GeoFunctions.js"],"sourcesContent":["export const GetDistance = (lat1, lon1, lat2, lon2) => {\r\n    if ((lat1 === lat2) && (lon1 === lon2)) {\r\n        return 0;\r\n    }\r\n    else {\r\n        var radlat1 = Math.PI * lat1 / 180;\r\n        var radlat2 = Math.PI * lat2 / 180;\r\n        var theta = lon1 - lon2;\r\n        var radtheta = Math.PI * theta / 180;\r\n        var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\r\n        if (dist > 1) {\r\n            dist = 1;\r\n        }\r\n        dist = Math.acos(dist);\r\n        dist = dist * 180 / Math.PI;\r\n        dist = dist * 60 * 1.1515;\r\n        dist = dist * 1.609344;\r\n        return dist;\r\n    }\r\n};\r\n\r\nexport const GetTripDistance = async (data) => {\r\n    if (data) {\r\n        const arr = Object.keys(data)\r\n            .filter(function (i) {\r\n                return data[i].status == 'STARTED' || data[i].status == 'REACHED'\r\n            })\r\n            .map(i => {\r\n                data[i].id = i\r\n                return data[i]\r\n            });\r\n        let distance = 0;\r\n        let coords = [];\r\n        try{\r\n            if (arr.length == 0 || arr.length == 1) {\r\n                distance = 0;\r\n            } else if (arr.length == 2) {\r\n                distance = GetDistance(arr[0].lat, arr[0].lng, arr[1].lat, arr[1].lng);\r\n                coords.push({latitude : arr[0].lat, longitude : arr[0].lng});\r\n                coords.push({latitude : arr[1].lat, longitude : arr[1].lng});\r\n            } else {\r\n                for (let i = 0; i < (arr.length - 1); i++) {\r\n                    distance = distance + GetDistance(arr[i].lat, arr[i].lng, arr[i + 1].lat, arr[i + 1].lng)\r\n                    coords.push({latitude : arr[i].lat, longitude : arr[i].lng});\r\n                }\r\n                coords.push({latitude : arr[arr.length - 1].lat, longitude : arr[arr.length - 1].lng});\r\n            }\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n        return {\r\n            distance:distance ,\r\n            coords: coords\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            distance:0,\r\n            coords:[]\r\n        };\r\n    }\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}