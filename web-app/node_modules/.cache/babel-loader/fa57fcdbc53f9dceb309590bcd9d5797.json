{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sumitbajaj/Downloads/TAXI-PICK/Sourcecode/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/sumitbajaj/Downloads/TAXI-PICK/Sourcecode/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{FETCH_ESTIMATE,FETCH_ESTIMATE_SUCCESS,FETCH_ESTIMATE_FAILED,CLEAR_ESTIMATE}from\"../store/types\";import Polyline from'@mapbox/polyline';import{firebase}from'../config/configureFirebase';import{FareCalculator}from'../other/FareCalculator';import{onValue}from\"firebase/database\";export var getEstimate=function getEstimate(bookingData){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch){var settingsRef,res,points,waypoints;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:settingsRef=firebase.settingsRef;dispatch({type:FETCH_ESTIMATE,payload:bookingData});res=bookingData.routeDetails;if(res){points=Polyline.decode(res.polylinePoints);waypoints=points.map(function(point){return{latitude:point[0],longitude:point[1]};});onValue(settingsRef,function(settingdata){var settings=settingdata.val();var distance=settings.convert_to_mile?res.distance_in_km/1.609344:res.distance_in_km;var _FareCalculator=FareCalculator(distance,res.time_in_secs,bookingData.carDetails,bookingData.instructionData,settings.decimal),totalCost=_FareCalculator.totalCost,grandTotal=_FareCalculator.grandTotal,convenience_fees=_FareCalculator.convenience_fees;dispatch({type:FETCH_ESTIMATE_SUCCESS,payload:{pickup:bookingData.pickup,drop:bookingData.drop,carDetails:bookingData.carDetails,instructionData:bookingData.instructionData,estimateDistance:parseFloat(distance).toFixed(settings.decimal),fareCost:totalCost?parseFloat(totalCost).toFixed(settings.decimal):0,estimateFare:grandTotal?parseFloat(grandTotal).toFixed(settings.decimal):0,estimateTime:res.time_in_secs,convenience_fees:convenience_fees?parseFloat(convenience_fees).toFixed(settings.decimal):0,waypoints:waypoints}});},{onlyOnce:true});}else{dispatch({type:FETCH_ESTIMATE_FAILED,payload:\"No Route Found\"});}case 4:case\"end\":return _context.stop();}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var clearEstimate=function clearEstimate(){return function(dispatch){dispatch({type:CLEAR_ESTIMATE,payload:null});};};","map":{"version":3,"names":["FETCH_ESTIMATE","FETCH_ESTIMATE_SUCCESS","FETCH_ESTIMATE_FAILED","CLEAR_ESTIMATE","Polyline","firebase","FareCalculator","onValue","getEstimate","bookingData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","settingsRef","res","points","waypoints","wrap","_callee$","_context","prev","next","type","payload","routeDetails","decode","polylinePoints","map","point","latitude","longitude","settingdata","settings","val","distance","convert_to_mile","distance_in_km","_FareCalculator","time_in_secs","carDetails","instructionData","decimal","totalCost","grandTotal","convenience_fees","pickup","drop","estimateDistance","parseFloat","toFixed","fareCost","estimateFare","estimateTime","onlyOnce","stop","_x","apply","arguments","clearEstimate"],"sources":["/Users/sumitbajaj/Downloads/TAXI-PICK/Sourcecode/common/src/actions/estimateactions.js"],"sourcesContent":["import {\r\n  FETCH_ESTIMATE,\r\n  FETCH_ESTIMATE_SUCCESS,\r\n  FETCH_ESTIMATE_FAILED,\r\n  CLEAR_ESTIMATE\r\n} from \"../store/types\";\r\nimport Polyline from '@mapbox/polyline';\r\nimport { firebase } from '../config/configureFirebase';\r\nimport { FareCalculator } from '../other/FareCalculator';\r\nimport { onValue } from \"firebase/database\";\r\n\r\nexport const getEstimate = (bookingData) => async (dispatch) => {\r\n  const   {\r\n      settingsRef\r\n  } = firebase;\r\n\r\n  dispatch({\r\n    type: FETCH_ESTIMATE,\r\n    payload: bookingData,\r\n  });\r\n          \r\n\r\n  let res = bookingData.routeDetails;\r\n\r\n  if(res){\r\n    let points = Polyline.decode(res.polylinePoints);\r\n\r\n    let waypoints = points.map((point) => {\r\n        return {\r\n            latitude: point[0],\r\n            longitude: point[1]\r\n        }\r\n    });\r\n    \r\n    onValue(settingsRef, settingdata => {\r\n      let settings = settingdata.val();\r\n      let distance = settings.convert_to_mile? (res.distance_in_km / 1.609344) : res.distance_in_km;\r\n\r\n     let {totalCost, grandTotal, convenience_fees} = FareCalculator(distance, res.time_in_secs, bookingData.carDetails, bookingData.instructionData, settings.decimal);\r\n     \r\n      dispatch({\r\n        type: FETCH_ESTIMATE_SUCCESS,\r\n        payload: {\r\n          pickup:bookingData.pickup,\r\n          drop:bookingData.drop,\r\n          carDetails:bookingData.carDetails,\r\n          instructionData: bookingData.instructionData,\r\n          estimateDistance: parseFloat(distance).toFixed(settings.decimal),\r\n          fareCost: totalCost ? parseFloat(totalCost).toFixed(settings.decimal) : 0,\r\n          estimateFare: grandTotal ? parseFloat(grandTotal).toFixed(settings.decimal) : 0,\r\n          estimateTime:res.time_in_secs,\r\n          convenience_fees: convenience_fees ? parseFloat(convenience_fees).toFixed(settings.decimal) : 0,\r\n          waypoints: waypoints\r\n        },\r\n      });\r\n    }, {onlyOnce:true});\r\n  }else{\r\n    dispatch({\r\n      type: FETCH_ESTIMATE_FAILED,\r\n      payload: \"No Route Found\",\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport const clearEstimate = () => (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ESTIMATE,\r\n        payload: null,\r\n    });    \r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}