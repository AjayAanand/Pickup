{"ast":null,"code":"import{FETCH_SETTINGS,FETCH_SETTINGS_SUCCESS,FETCH_SETTINGS_FAILED,EDIT_SETTINGS,CLEAR_SETTINGS_ERROR}from\"../store/types\";import store from'../store/store';import{firebase}from'../config/configureFirebase';import{onValue,set}from\"firebase/database\";export var fetchSettings=function fetchSettings(){return function(dispatch){var settingsRef=firebase.settingsRef;dispatch({type:FETCH_SETTINGS,payload:null});onValue(settingsRef,function(snapshot){if(snapshot.val()){dispatch({type:FETCH_SETTINGS_SUCCESS,payload:snapshot.val()});}else{dispatch({type:FETCH_SETTINGS_FAILED,payload:\"Unable to fetch database and settings.\"});}});};};export var editSettings=function editSettings(settings){return function(dispatch){var settingsRef=firebase.settingsRef;dispatch({type:EDIT_SETTINGS,payload:settings});set(settingsRef,settings);alert(store.getState().languagedata.defaultLanguage.updated);};};export var clearSettingsViewError=function clearSettingsViewError(){return function(dispatch){dispatch({type:CLEAR_SETTINGS_ERROR,payload:null});};};","map":{"version":3,"names":["FETCH_SETTINGS","FETCH_SETTINGS_SUCCESS","FETCH_SETTINGS_FAILED","EDIT_SETTINGS","CLEAR_SETTINGS_ERROR","store","firebase","onValue","set","fetchSettings","dispatch","settingsRef","type","payload","snapshot","val","editSettings","settings","alert","getState","languagedata","defaultLanguage","updated","clearSettingsViewError"],"sources":["/Users/sumitbajaj/Downloads/TAXI-PICK/Sourcecode/common/src/actions/settingsactions.js"],"sourcesContent":["import {\r\n  FETCH_SETTINGS,\r\n  FETCH_SETTINGS_SUCCESS,\r\n  FETCH_SETTINGS_FAILED,\r\n  EDIT_SETTINGS,\r\n  CLEAR_SETTINGS_ERROR\r\n} from \"../store/types\";\r\n\r\nimport store from '../store/store';\r\nimport { firebase } from '../config/configureFirebase';\r\nimport { onValue, set } from \"firebase/database\";\r\n\r\nexport const fetchSettings= () => (dispatch) => {\r\n\r\n  const {\r\n    settingsRef\r\n  } = firebase;\r\n\r\n  dispatch({\r\n    type: FETCH_SETTINGS,\r\n    payload: null,\r\n  });\r\n  onValue(settingsRef, (snapshot) => {\r\n    if (snapshot.val()) {\r\n      dispatch({\r\n        type: FETCH_SETTINGS_SUCCESS,\r\n        payload: snapshot.val(),\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: FETCH_SETTINGS_FAILED,\r\n        payload: \"Unable to fetch database and settings.\",\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport const editSettings = (settings) => (dispatch) => {\r\n  const {\r\n    settingsRef\r\n  } = firebase;\r\n  dispatch({\r\n    type: EDIT_SETTINGS,\r\n    payload: settings\r\n  });\r\n  set(settingsRef, settings);\r\n  alert(store.getState().languagedata.defaultLanguage.updated);\r\n};\r\n\r\nexport const clearSettingsViewError = () => (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_SETTINGS_ERROR,\r\n    payload: null\r\n  });\r\n};"],"mappings":"AAAA,OACEA,cAAc,CACdC,sBAAsB,CACtBC,qBAAqB,CACrBC,aAAa,CACbC,oBAAoB,KACf,gBAAgB,CAEvB,MAAO,CAAAC,KAAK,KAAM,gBAAgB,CAClC,OAASC,QAAQ,KAAQ,6BAA6B,CACtD,OAASC,OAAO,CAAEC,GAAG,KAAQ,mBAAmB,CAEhD,MAAO,IAAM,CAAAC,aAAa,CAAE,QAAf,CAAAA,aAAaA,CAAA,QAAQ,UAACC,QAAQ,CAAK,CAE9C,GACE,CAAAC,WAAW,CACTL,QAAQ,CADVK,WAAW,CAGbD,QAAQ,CAAC,CACPE,IAAI,CAAEZ,cAAc,CACpBa,OAAO,CAAE,IACX,CAAC,CAAC,CACFN,OAAO,CAACI,WAAW,CAAE,SAACG,QAAQ,CAAK,CACjC,GAAIA,QAAQ,CAACC,GAAG,EAAE,CAAE,CAClBL,QAAQ,CAAC,CACPE,IAAI,CAAEX,sBAAsB,CAC5BY,OAAO,CAAEC,QAAQ,CAACC,GAAG,EACvB,CAAC,CAAC,CACJ,CAAC,IAAM,CACLL,QAAQ,CAAC,CACPE,IAAI,CAAEV,qBAAqB,CAC3BW,OAAO,CAAE,wCACX,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CACJ,CAAC,GAED,MAAO,IAAM,CAAAG,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIC,QAAQ,QAAK,UAACP,QAAQ,CAAK,CACtD,GACE,CAAAC,WAAW,CACTL,QAAQ,CADVK,WAAW,CAEbD,QAAQ,CAAC,CACPE,IAAI,CAAET,aAAa,CACnBU,OAAO,CAAEI,QACX,CAAC,CAAC,CACFT,GAAG,CAACG,WAAW,CAAEM,QAAQ,CAAC,CAC1BC,KAAK,CAACb,KAAK,CAACc,QAAQ,EAAE,CAACC,YAAY,CAACC,eAAe,CAACC,OAAO,CAAC,CAC9D,CAAC,GAED,MAAO,IAAM,CAAAC,sBAAsB,CAAG,QAAzB,CAAAA,sBAAsBA,CAAA,QAAS,UAACb,QAAQ,CAAK,CACxDA,QAAQ,CAAC,CACPE,IAAI,CAAER,oBAAoB,CAC1BS,OAAO,CAAE,IACX,CAAC,CAAC,CACJ,CAAC"},"metadata":{},"sourceType":"module"}