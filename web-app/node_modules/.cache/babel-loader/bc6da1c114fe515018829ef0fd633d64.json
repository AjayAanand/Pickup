{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sumitbajaj/Downloads/TAXI-PICK/Sourcecode/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/sumitbajaj/Downloads/TAXI-PICK/Sourcecode/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{FETCH_BOOKINGS,FETCH_BOOKINGS_SUCCESS,FETCH_BOOKINGS_FAILED,UPDATE_BOOKING,CANCEL_BOOKING}from\"../store/types\";import{fetchBookingLocations}from'../actions/locationactions';import{RequestPushMsg}from'../other/NotificationFunctions';import store from'../store/store';import{firebase}from'../config/configureFirebase';import{addActualsToBooking,saveAddresses,updateDriverQueue}from\"../other/sharedFunctions\";import{get,onValue,update,off,remove,push}from\"firebase/database\";import{uploadBytesResumable,getDownloadURL}from\"firebase/storage\";export var fetchBookings=function fetchBookings(){return function(dispatch){var bookingListRef=firebase.bookingListRef;dispatch({type:FETCH_BOOKINGS,payload:null});var userInfo=store.getState().auth.profile;off(bookingListRef(userInfo.uid,userInfo.usertype));onValue(bookingListRef(userInfo.uid,userInfo.usertype),function(snapshot){if(snapshot.val()){var data=snapshot.val();var active=[];var tracked=null;var bookings=Object.keys(data).map(function(i){data[i].id=i;data[i].pickupAddress=data[i].pickup.add;data[i].dropAddress=data[i].drop.add;data[i].discount=data[i].discount?data[i].discount:0;data[i].cashPaymentAmount=data[i].cashPaymentAmount?data[i].cashPaymentAmount:0;data[i].cardPaymentAmount=data[i].cardPaymentAmount?data[i].cardPaymentAmount:0;return data[i];});for(var i=0;i<bookings.length;i++){if(['PAYMENT_PENDING','NEW','ACCEPTED','ARRIVED','STARTED','REACHED','PENDING','PAID'].indexOf(bookings[i].status)!=-1){active.push(bookings[i]);}if(['ACCEPTED','ARRIVED','STARTED'].indexOf(bookings[i].status)!=-1&&userInfo.usertype=='driver'){tracked=bookings[i];fetchBookingLocations(tracked.id)(dispatch);}}dispatch({type:FETCH_BOOKINGS_SUCCESS,payload:{bookings:bookings.reverse(),active:active,tracked:tracked}});if(tracked){dispatch({type:FETCH_BOOKINGS_SUCCESS,payload:null});}}else{dispatch({type:FETCH_BOOKINGS_FAILED,payload:store.getState().languagedata.defaultLanguage.no_bookings});}});};};export var updateBooking=function updateBooking(booking){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch){var auth,trackingRef,singleBookingRef,singleUserRef,walletHistoryRef,settingsRef,userRatingsRef,settingsdata,settings,dt,_dt,localString,timeString,driverLocation,_driverLocation,address,bookingObj;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:auth=firebase.auth,trackingRef=firebase.trackingRef,singleBookingRef=firebase.singleBookingRef,singleUserRef=firebase.singleUserRef,walletHistoryRef=firebase.walletHistoryRef,settingsRef=firebase.settingsRef,userRatingsRef=firebase.userRatingsRef;dispatch({type:UPDATE_BOOKING,payload:booking});_context.next=4;return get(settingsRef);case 4:settingsdata=_context.sent;settings=settingsdata.val();if(booking.status=='PAYMENT_PENDING'){update(singleBookingRef(booking.id),booking);}if(booking.status=='NEW'||booking.status=='ACCEPTED'){update(singleBookingRef(booking.id),updateDriverQueue(booking));}if(booking.status=='ARRIVED'){dt=new Date();booking.driver_arrive_time=dt.getTime().toString();update(singleBookingRef(booking.id),booking);if(booking.customer_token){RequestPushMsg(booking.customer_token,{title:store.getState().languagedata.defaultLanguage.notification_title,msg:store.getState().languagedata.defaultLanguage.driver_near,screen:'BookedCab',params:{bookingId:booking.id}});}}if(booking.status=='STARTED'){_dt=new Date();localString=_dt.getHours()+\":\"+_dt.getMinutes()+\":\"+_dt.getSeconds();timeString=_dt.getTime();booking.trip_start_time=localString;booking.startTime=timeString;update(singleBookingRef(booking.id),booking);driverLocation=store.getState().gpsdata.location;push(trackingRef(booking.id),{at:new Date().getTime(),status:'STARTED',lat:driverLocation.lat,lng:driverLocation.lng});if(booking.customer_token){RequestPushMsg(booking.customer_token,{title:store.getState().languagedata.defaultLanguage.notification_title,msg:store.getState().languagedata.defaultLanguage.driver_journey_msg+booking.reference,screen:'BookedCab',params:{bookingId:booking.id}});}}if(!(booking.status=='REACHED')){_context.next=21;break;}_driverLocation=store.getState().gpsdata.location;push(trackingRef(booking.id),{at:new Date().getTime(),status:'REACHED',lat:_driverLocation.lat,lng:_driverLocation.lng});_context.next=15;return saveAddresses(booking,_driverLocation);case 15:address=_context.sent;_context.next=18;return addActualsToBooking(booking,address,_driverLocation);case 18:bookingObj=_context.sent;update(singleBookingRef(booking.id),bookingObj);if(booking.customer_token){RequestPushMsg(booking.customer_token,{title:store.getState().languagedata.defaultLanguage.notification_title,msg:store.getState().languagedata.defaultLanguage.driver_completed_ride,screen:'BookedCab',params:{bookingId:booking.id}});}case 21:if(booking.status=='PENDING'){update(singleBookingRef(booking.id),booking);update(singleUserRef(booking.driver),{queue:false});}if(booking.status=='PAID'){if(booking.booking_from_web){booking.status='COMPLETE';}update(singleBookingRef(booking.id),booking);if(booking.driver==auth.currentUser.uid&&(booking.prepaid||booking.payment_mode=='cash'||booking.payment_mode=='wallet')){update(singleUserRef(booking.driver),{queue:false});}if(booking.customer_token){RequestPushMsg(booking.customer_token,{title:store.getState().languagedata.defaultLanguage.notification_title,msg:store.getState().languagedata.defaultLanguage.success_payment,screen:'BookedCab',params:{bookingId:booking.id}});}if(booking.driver_token){RequestPushMsg(booking.driver_token,{title:store.getState().languagedata.defaultLanguage.notification_title,msg:store.getState().languagedata.defaultLanguage.success_payment,screen:'BookedCab',params:{bookingId:booking.id}});}}if(booking.status=='COMPLETE'){update(singleBookingRef(booking.id),booking);if(booking.rating){if(booking.driver_token){RequestPushMsg(booking.driver_token,{title:store.getState().languagedata.defaultLanguage.notification_title,msg:store.getState().languagedata.defaultLanguage.received_rating.toString().replace(\"X\",booking.rating.toString()),screen:'BookedCab',params:{bookingId:booking.id}});}onValue(userRatingsRef(booking.driver),function(snapshot){var ratings=snapshot.val();var rating;if(ratings){var sum=0;var arr=Object.values(ratings);for(var i=0;i<arr.length;i++){sum=sum+arr[i].rate;}sum=sum+booking.rating;rating=parseFloat(sum/(arr.length+1)).toFixed(1);}else{rating=booking.rating;}update(singleUserRef(booking.driver),{rating:rating});push(userRatingsRef(booking.driver),{user:booking.customer,rate:booking.rating});},{onlyOnce:true});}}case 24:case\"end\":return _context.stop();}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var cancelBooking=function cancelBooking(data){return function(dispatch){var singleBookingRef=firebase.singleBookingRef,singleUserRef=firebase.singleUserRef,requestedDriversRef=firebase.requestedDriversRef;dispatch({type:CANCEL_BOOKING,payload:data});update(singleBookingRef(data.booking.id),{status:'CANCELLED',reason:data.reason,cancelledBy:data.cancelledBy}).then(function(){if(data.booking.driver&&(data.booking.status==='NEW'||data.booking.status==='ACCEPTED'||data.booking.status==='ARRIVED')){update(singleUserRef(data.booking.driver),{queue:false});if(data.booking.driver_token){RequestPushMsg(data.booking.driver_token,{title:store.getState().languagedata.defaultLanguage.notification_title,msg:store.getState().languagedata.defaultLanguage.booking_cancelled+data.booking.id,screen:'BookedCab',params:{bookingId:data.booking.id}});}if(data.booking.customer_token){RequestPushMsg(data.booking.customer_token,{title:store.getState().languagedata.defaultLanguage.notification_title,msg:store.getState().languagedata.defaultLanguage.booking_cancelled+data.booking.id,screen:'BookedCab',params:{bookingId:data.booking.id}});}}if(data.booking.status==='NEW'){remove(requestedDriversRef(data.booking.id));}});};};export var updateBookingImage=function updateBookingImage(booking,imageType,imageBlob){return function(dispatch){var singleBookingRef=firebase.singleBookingRef,bookingImageRef=firebase.bookingImageRef;uploadBytesResumable(bookingImageRef(booking.id,imageType),imageBlob).then(function(){imageBlob.close();return getDownloadURL(bookingImageRef(booking.id,imageType));}).then(function(url){if(imageType=='pickup_image'){booking.pickup_image=url;}if(imageType=='deliver_image'){booking.deliver_image=url;}update(singleBookingRef(booking.id),booking);dispatch({type:UPDATE_BOOKING,payload:booking});});};};export var forceEndBooking=function forceEndBooking(booking){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch){var trackingRef,singleBookingRef,singleUserRef,walletHistoryRef,settingsRef,end_time,diff,totalTimeTaken,settingsdata,settings;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:trackingRef=firebase.trackingRef,singleBookingRef=firebase.singleBookingRef,singleUserRef=firebase.singleUserRef,walletHistoryRef=firebase.walletHistoryRef,settingsRef=firebase.settingsRef;dispatch({type:UPDATE_BOOKING,payload:booking});if(!(booking.status=='STARTED')){_context2.next=25;break;}push(trackingRef(booking.id),{at:new Date().getTime(),status:'REACHED',lat:booking.drop.lat,lng:booking.drop.lng});end_time=new Date();diff=(end_time.getTime()-parseFloat(booking.startTime))/1000;totalTimeTaken=Math.abs(Math.round(diff));booking.trip_end_time=end_time.getHours()+\":\"+end_time.getMinutes()+\":\"+end_time.getSeconds();booking.endTime=end_time.getTime();booking.total_trip_time=totalTimeTaken;if(booking.customer_token){RequestPushMsg(booking.customer_token,{title:store.getState().languagedata.defaultLanguage.notification_title,msg:store.getState().languagedata.defaultLanguage.driver_completed_ride,screen:'BookedCab',params:{bookingId:booking.id}});}update(singleUserRef(booking.driver),{queue:false});if(!booking.prepaid){_context2.next=23;break;}_context2.next=15;return get(settingsRef);case 15:settingsdata=_context2.sent;settings=settingsdata.val();onValue(singleUserRef(booking.driver),function(snapshot){var walletBalance=parseFloat(snapshot.val().walletBalance);walletBalance=walletBalance+parseFloat(booking.driver_share);if(parseFloat(booking.cashPaymentAmount)>0){walletBalance=walletBalance-parseFloat(booking.cashPaymentAmount);}update(singleUserRef(booking.driver),{\"walletBalance\":parseFloat(walletBalance.toFixed(settings.decimal))});var details={type:'Credit',amount:parseFloat(booking.driver_share).toFixed(settings.decimal),date:new Date().getTime(),txRef:booking.id};push(walletHistoryRef(booking.driver),details);if(parseFloat(booking.cashPaymentAmount)>0){var _details={type:'Debit',amount:booking.cashPaymentAmount,date:new Date().getTime(),txRef:booking.id};push(walletHistoryRef(booking.driver),_details);}},{onlyOnce:true});if(booking.customer_token){RequestPushMsg(booking.customer_token,{title:store.getState().languagedata.defaultLanguage.notification_title,msg:store.getState().languagedata.defaultLanguage.success_payment,screen:'BookedCab',params:{bookingId:booking.id}});}if(booking.driver_token){RequestPushMsg(booking.driver_token,{title:store.getState().languagedata.defaultLanguage.notification_title,msg:store.getState().languagedata.defaultLanguage.success_payment,screen:'BookedCab',params:{bookingId:booking.id}});}booking.status='PAID';_context2.next=24;break;case 23:booking.status='PENDING';case 24:update(singleBookingRef(booking.id),booking);case 25:case\"end\":return _context2.stop();}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};","map":{"version":3,"names":["FETCH_BOOKINGS","FETCH_BOOKINGS_SUCCESS","FETCH_BOOKINGS_FAILED","UPDATE_BOOKING","CANCEL_BOOKING","fetchBookingLocations","RequestPushMsg","store","firebase","addActualsToBooking","saveAddresses","updateDriverQueue","get","onValue","update","off","remove","push","uploadBytesResumable","getDownloadURL","fetchBookings","dispatch","bookingListRef","type","payload","userInfo","getState","auth","profile","uid","usertype","snapshot","val","data","active","tracked","bookings","Object","keys","map","i","id","pickupAddress","pickup","add","dropAddress","drop","discount","cashPaymentAmount","cardPaymentAmount","length","indexOf","status","reverse","languagedata","defaultLanguage","no_bookings","updateBooking","booking","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","trackingRef","singleBookingRef","singleUserRef","walletHistoryRef","settingsRef","userRatingsRef","settingsdata","settings","dt","_dt","localString","timeString","driverLocation","_driverLocation","address","bookingObj","wrap","_callee$","_context","prev","next","sent","Date","driver_arrive_time","getTime","toString","customer_token","title","notification_title","msg","driver_near","screen","params","bookingId","getHours","getMinutes","getSeconds","trip_start_time","startTime","gpsdata","location","at","lat","lng","driver_journey_msg","reference","driver_completed_ride","driver","queue","booking_from_web","currentUser","prepaid","payment_mode","success_payment","driver_token","rating","received_rating","replace","ratings","sum","arr","values","rate","parseFloat","toFixed","user","customer","onlyOnce","stop","_x","apply","arguments","cancelBooking","requestedDriversRef","reason","cancelledBy","then","booking_cancelled","updateBookingImage","imageType","imageBlob","bookingImageRef","close","url","pickup_image","deliver_image","forceEndBooking","_ref2","_callee2","end_time","diff","totalTimeTaken","_callee2$","_context2","Math","abs","round","trip_end_time","endTime","total_trip_time","walletBalance","driver_share","decimal","details","amount","date","txRef","_x2"],"sources":["/Users/sumitbajaj/Downloads/TAXI-PICK/Sourcecode/common/src/actions/bookinglistactions.js"],"sourcesContent":["import {\r\n  FETCH_BOOKINGS,\r\n  FETCH_BOOKINGS_SUCCESS,\r\n  FETCH_BOOKINGS_FAILED,\r\n  UPDATE_BOOKING,\r\n  CANCEL_BOOKING\r\n} from \"../store/types\";\r\nimport { fetchBookingLocations } from '../actions/locationactions';\r\nimport { RequestPushMsg } from '../other/NotificationFunctions';\r\nimport store from '../store/store';\r\nimport { firebase } from '../config/configureFirebase';\r\nimport { addActualsToBooking, saveAddresses, updateDriverQueue } from \"../other/sharedFunctions\";\r\nimport { get, onValue, update, off, remove, push } from \"firebase/database\";\r\nimport { uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\r\n\r\nexport const fetchBookings = () => (dispatch) => {\r\n\r\n  const {\r\n    bookingListRef,\r\n  } = firebase;\r\n\r\n  dispatch({\r\n    type: FETCH_BOOKINGS,\r\n    payload: null,\r\n  });\r\n\r\n  const userInfo = store.getState().auth.profile;\r\n\r\n  off(bookingListRef(userInfo.uid, userInfo.usertype));\r\n  onValue(bookingListRef(userInfo.uid, userInfo.usertype),(snapshot) => {\r\n    if (snapshot.val()) {\r\n      const data = snapshot.val();\r\n      const active = [];\r\n      let tracked = null;\r\n      const bookings = Object.keys(data)\r\n        .map((i) => {\r\n          data[i].id = i;\r\n          data[i].pickupAddress = data[i].pickup.add;\r\n          data[i].dropAddress = data[i].drop.add;\r\n          data[i].discount = data[i].discount\r\n            ? data[i].discount\r\n            : 0;\r\n          data[i].cashPaymentAmount = data[i].cashPaymentAmount\r\n            ? data[i].cashPaymentAmount\r\n            : 0;\r\n          data[i].cardPaymentAmount = data[i].cardPaymentAmount\r\n            ? data[i].cardPaymentAmount\r\n            : 0;\r\n          return data[i];\r\n        });\r\n      for (let i = 0; i < bookings.length; i++) {\r\n        if (['PAYMENT_PENDING','NEW', 'ACCEPTED', 'ARRIVED', 'STARTED', 'REACHED', 'PENDING', 'PAID'].indexOf(bookings[i].status) != -1) {\r\n          active.push(bookings[i]);\r\n        }\r\n        if ((['ACCEPTED', 'ARRIVED', 'STARTED'].indexOf(bookings[i].status) != -1) && userInfo.usertype == 'driver') {\r\n          tracked = bookings[i];\r\n          fetchBookingLocations(tracked.id)(dispatch);\r\n        }\r\n      }\r\n      dispatch({\r\n        type: FETCH_BOOKINGS_SUCCESS,\r\n        payload: {\r\n          bookings: bookings.reverse(),\r\n          active: active,\r\n          tracked: tracked\r\n        },\r\n      });\r\n      if (tracked) {\r\n        dispatch({\r\n          type: FETCH_BOOKINGS_SUCCESS,\r\n          payload: null\r\n        });\r\n      }\r\n    } else {\r\n      dispatch({\r\n        type: FETCH_BOOKINGS_FAILED,\r\n        payload: store.getState().languagedata.defaultLanguage.no_bookings,\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport const updateBooking = (booking) => async (dispatch) => {\r\n\r\n  const {\r\n    auth,\r\n    trackingRef,\r\n    singleBookingRef,\r\n    singleUserRef,\r\n    walletHistoryRef,\r\n    settingsRef,\r\n    userRatingsRef\r\n  } = firebase;\r\n\r\n  dispatch({\r\n    type: UPDATE_BOOKING,\r\n    payload: booking,\r\n  });\r\n\r\n  const settingsdata = await get(settingsRef);\r\n  const settings = settingsdata.val();\r\n  \r\n  if (booking.status == 'PAYMENT_PENDING') {\r\n    update(singleBookingRef(booking.id),booking);\r\n  }\r\n  if (booking.status == 'NEW' || booking.status == 'ACCEPTED') {\r\n    update(singleBookingRef(booking.id), updateDriverQueue(booking));\r\n  }\r\n  if (booking.status == 'ARRIVED') {\r\n    let dt = new Date();\r\n    booking.driver_arrive_time = dt.getTime().toString();\r\n    update(singleBookingRef(booking.id),booking);\r\n    if(booking.customer_token){\r\n      RequestPushMsg(\r\n        booking.customer_token,\r\n        {\r\n            title: store.getState().languagedata.defaultLanguage.notification_title,\r\n            msg: store.getState().languagedata.defaultLanguage.driver_near,\r\n            screen: 'BookedCab',\r\n            params: { bookingId: booking.id }\r\n        });\r\n    }\r\n  }\r\n  \r\n  if (booking.status == 'STARTED') {\r\n    let dt = new Date();\r\n    let localString = dt.getHours() + \":\" + dt.getMinutes() + \":\" + dt.getSeconds();\r\n    let timeString = dt.getTime();\r\n    booking.trip_start_time = localString;\r\n    booking.startTime = timeString;\r\n    update(singleBookingRef(booking.id),booking);\r\n\r\n    const driverLocation = store.getState().gpsdata.location;\r\n    \r\n    push(trackingRef(booking.id),{\r\n      at: new Date().getTime(),\r\n      status: 'STARTED',\r\n      lat: driverLocation.lat,\r\n      lng: driverLocation.lng\r\n    });\r\n\r\n    if(booking.customer_token){\r\n      RequestPushMsg(\r\n        booking.customer_token,\r\n        {\r\n            title: store.getState().languagedata.defaultLanguage.notification_title,\r\n            msg: store.getState().languagedata.defaultLanguage.driver_journey_msg + booking.reference,\r\n            screen: 'BookedCab',\r\n            params: { bookingId: booking.id }\r\n        });\r\n      }\r\n   }\r\n\r\n  if (booking.status == 'REACHED') {\r\n\r\n    const driverLocation = store.getState().gpsdata.location;\r\n\r\n    push(trackingRef(booking.id),{\r\n      at: new Date().getTime(),\r\n      status: 'REACHED',\r\n      lat: driverLocation.lat,\r\n      lng: driverLocation.lng\r\n    });\r\n\r\n    let address = await saveAddresses(booking,driverLocation);\r\n\r\n    let bookingObj = await addActualsToBooking(booking, address, driverLocation);\r\n    update(singleBookingRef(booking.id),bookingObj);\r\n\r\n    if(booking.customer_token){\r\n      RequestPushMsg(\r\n        booking.customer_token,\r\n        {\r\n            title: store.getState().languagedata.defaultLanguage.notification_title,\r\n            msg: store.getState().languagedata.defaultLanguage.driver_completed_ride,\r\n            screen: 'BookedCab',\r\n            params: { bookingId: booking.id }\r\n        });\r\n    }\r\n  }\r\n\r\n  if (booking.status == 'PENDING') {\r\n    update(singleBookingRef(booking.id),booking);\r\n    update(singleUserRef(booking.driver), { queue: false });\r\n  }\r\n  if (booking.status == 'PAID') {\r\n    if(booking.booking_from_web){\r\n      booking.status = 'COMPLETE';\r\n    }\r\n    update(singleBookingRef(booking.id), booking);\r\n    if(booking.driver == auth.currentUser.uid && (booking.prepaid || booking.payment_mode == 'cash' || booking.payment_mode == 'wallet')){\r\n      update(singleUserRef(booking.driver), { queue: false });\r\n    }\r\n\r\n    if(booking.customer_token){\r\n      RequestPushMsg(\r\n        booking.customer_token,\r\n        {\r\n            title: store.getState().languagedata.defaultLanguage.notification_title,\r\n            msg: store.getState().languagedata.defaultLanguage.success_payment,\r\n            screen: 'BookedCab',\r\n            params: { bookingId: booking.id }\r\n        });\r\n    }\r\n\r\n    if(booking.driver_token){\r\n        RequestPushMsg(\r\n          booking.driver_token,\r\n          {\r\n              title: store.getState().languagedata.defaultLanguage.notification_title,\r\n              msg: store.getState().languagedata.defaultLanguage.success_payment,\r\n              screen: 'BookedCab',\r\n              params: { bookingId: booking.id }\r\n          });\r\n      }\r\n    }\r\n\r\n  if (booking.status == 'COMPLETE') {\r\n    update(singleBookingRef(booking.id), booking);\r\n    if (booking.rating) {\r\n      if(booking.driver_token){\r\n        RequestPushMsg(\r\n          booking.driver_token,\r\n          {\r\n              title: store.getState().languagedata.defaultLanguage.notification_title,\r\n              msg:  store.getState().languagedata.defaultLanguage.received_rating.toString().replace(\"X\", booking.rating.toString()),\r\n              screen: 'BookedCab',\r\n              params: { bookingId: booking.id }\r\n          });\r\n      }\r\n      onValue(userRatingsRef(booking.driver), snapshot => {\r\n        let ratings = snapshot.val();\r\n        let rating;\r\n        if(ratings){\r\n          let sum = 0;\r\n          const arr = Object.values(ratings);\r\n          for (let i = 0; i< arr.length ; i++){\r\n            sum = sum + arr[i].rate\r\n          }\r\n          sum = sum + booking.rating;\r\n          rating = parseFloat(sum / (arr.length + 1)).toFixed(1);\r\n        }else{\r\n          rating =  booking.rating;\r\n        }\r\n        update(singleUserRef(booking.driver),{rating: rating});\r\n        push(userRatingsRef(booking.driver), {\r\n          user: booking.customer,\r\n          rate: booking.rating\r\n        });\r\n      }, { onlyOnce: true});\r\n    }\r\n  }\r\n};\r\n\r\nexport const cancelBooking = (data) => (dispatch) => {\r\n  const {\r\n    singleBookingRef,\r\n    singleUserRef,\r\n    requestedDriversRef\r\n  } = firebase;\r\n\r\n  dispatch({\r\n    type: CANCEL_BOOKING,\r\n    payload: data,\r\n  });\r\n\r\n  update(singleBookingRef(data.booking.id),{\r\n    status: 'CANCELLED',\r\n    reason: data.reason,\r\n    cancelledBy: data.cancelledBy\r\n  }).then(() => {\r\n    if (data.booking.driver && (data.booking.status === 'NEW' || data.booking.status === 'ACCEPTED' || data.booking.status === 'ARRIVED')) {\r\n      update(singleUserRef(data.booking.driver),{ queue: false });\r\n      if(data.booking.driver_token){\r\n        RequestPushMsg(\r\n          data.booking.driver_token,\r\n          {\r\n              title: store.getState().languagedata.defaultLanguage.notification_title,\r\n              msg:  store.getState().languagedata.defaultLanguage.booking_cancelled + data.booking.id,\r\n              screen: 'BookedCab',\r\n              params: { bookingId: data.booking.id }\r\n          });\r\n        }\r\n\r\n        if(data.booking.customer_token){\r\n          RequestPushMsg(\r\n            data.booking.customer_token,\r\n            {\r\n                title: store.getState().languagedata.defaultLanguage.notification_title,\r\n                msg:  store.getState().languagedata.defaultLanguage.booking_cancelled + data.booking.id,\r\n                screen: 'BookedCab',\r\n                params: { bookingId: data.booking.id }\r\n            });\r\n        }\r\n   }\r\n    if (data.booking.status === 'NEW') {\r\n      remove(requestedDriversRef(data.booking.id));\r\n    }\r\n  });\r\n};\r\n\r\nexport const updateBookingImage = (booking, imageType, imageBlob) => (dispatch) => {\r\n  const   {\r\n    singleBookingRef,\r\n    bookingImageRef\r\n  } = firebase;\r\n  uploadBytesResumable(bookingImageRef(booking.id,imageType), imageBlob).then(() => {\r\n    imageBlob.close()\r\n    return getDownloadURL(bookingImageRef(booking.id,imageType))\r\n  }).then((url) => {\r\n    if(imageType == 'pickup_image'){\r\n      booking.pickup_image = url;\r\n    }\r\n    if(imageType == 'deliver_image'){\r\n      booking.deliver_image = url;\r\n    }\r\n    update(singleBookingRef(booking.id), booking);\r\n    dispatch({\r\n      type: UPDATE_BOOKING,\r\n      payload: booking,\r\n    });\r\n  })\r\n};\r\n\r\nexport const forceEndBooking = (booking) => async (dispatch) => {\r\n\r\n  const {\r\n    trackingRef,\r\n    singleBookingRef,\r\n    singleUserRef,\r\n    walletHistoryRef,\r\n    settingsRef,\r\n  } = firebase;\r\n\r\n  dispatch({\r\n    type: UPDATE_BOOKING,\r\n    payload: booking,\r\n  });\r\n  \r\n  if (booking.status == 'STARTED') {\r\n\r\n    push(trackingRef(booking.id),{\r\n      at: new Date().getTime(),\r\n      status: 'REACHED',\r\n      lat: booking.drop.lat,\r\n      lng: booking.drop.lng\r\n    });\r\n\r\n    const end_time = new Date();\r\n    const diff = (end_time.getTime() - parseFloat(booking.startTime)) / 1000;\r\n    const totalTimeTaken = Math.abs(Math.round(diff));\r\n    booking.trip_end_time = end_time.getHours() + \":\" + end_time.getMinutes() + \":\" + end_time.getSeconds();\r\n    booking.endTime = end_time.getTime();\r\n    booking.total_trip_time = totalTimeTaken;\r\n\r\n    if(booking.customer_token){\r\n      RequestPushMsg(\r\n        booking.customer_token,\r\n        {\r\n            title: store.getState().languagedata.defaultLanguage.notification_title,\r\n            msg: store.getState().languagedata.defaultLanguage.driver_completed_ride,\r\n            screen: 'BookedCab',\r\n            params: { bookingId: booking.id }\r\n        });\r\n    }\r\n\r\n    update(singleUserRef(booking.driver),{ queue: false });\r\n\r\n    if(booking.prepaid){\r\n\r\n      const settingsdata = await get(settingsRef);\r\n      const settings = settingsdata.val();\r\n\r\n      onValue(singleUserRef(booking.driver), snapshot => {\r\n        let walletBalance = parseFloat(snapshot.val().walletBalance);\r\n        walletBalance = walletBalance + parseFloat(booking.driver_share);\r\n        if(parseFloat(booking.cashPaymentAmount)>0){\r\n          walletBalance = walletBalance - parseFloat(booking.cashPaymentAmount);\r\n        }\r\n        update(singleUserRef(booking.driver),{\"walletBalance\": parseFloat(walletBalance.toFixed(settings.decimal))});\r\n\r\n        let details = {\r\n          type: 'Credit',\r\n          amount: parseFloat(booking.driver_share).toFixed(settings.decimal),\r\n          date: new Date().getTime(),\r\n          txRef: booking.id\r\n        }\r\n        push(walletHistoryRef(booking.driver),details);\r\n        \r\n        if(parseFloat(booking.cashPaymentAmount)>0){\r\n          let details = {\r\n            type: 'Debit',\r\n            amount: booking.cashPaymentAmount,\r\n            date: new Date().getTime(),\r\n            txRef: booking.id\r\n          }\r\n          push(walletHistoryRef(booking.driver), details);\r\n        }  \r\n      },{onlyOnce: true});\r\n\r\n      if(booking.customer_token){\r\n        RequestPushMsg(\r\n          booking.customer_token,\r\n          {\r\n              title: store.getState().languagedata.defaultLanguage.notification_title,\r\n              msg: store.getState().languagedata.defaultLanguage.success_payment,\r\n              screen: 'BookedCab',\r\n              params: { bookingId: booking.id }\r\n          });\r\n      }\r\n\r\n      if(booking.driver_token){\r\n        RequestPushMsg(\r\n          booking.driver_token,\r\n          {\r\n              title: store.getState().languagedata.defaultLanguage.notification_title,\r\n              msg: store.getState().languagedata.defaultLanguage.success_payment,\r\n              screen: 'BookedCab',\r\n              params: { bookingId: booking.id }\r\n          });\r\n        }\r\n      booking.status = 'PAID';\r\n    } else{\r\n      booking.status = 'PENDING';\r\n    }\r\n\r\n    update(singleBookingRef(booking.id), booking);\r\n  }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}