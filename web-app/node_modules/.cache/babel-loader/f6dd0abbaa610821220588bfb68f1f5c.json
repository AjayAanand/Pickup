{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sumitbajaj/Downloads/TAXI-PICK/Sourcecode/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/sumitbajaj/Downloads/TAXI-PICK/Sourcecode/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{FETCH_NOTIFICATIONS,FETCH_NOTIFICATIONS_SUCCESS,FETCH_NOTIFICATIONS_FAILED,EDIT_NOTIFICATIONS,SEND_NOTIFICATION,SEND_NOTIFICATION_SUCCESS,SEND_NOTIFICATION_FAILED}from\"../store/types\";import{RequestPushMsg}from'../other/NotificationFunctions';import{firebase}from'../config/configureFirebase';import{onValue,set,push,remove}from\"firebase/database\";import store from'../store/store';export var fetchUserNotifications=function fetchUserNotifications(){return function(dispatch){var auth=firebase.auth,userNotificationsRef=firebase.userNotificationsRef;dispatch({type:FETCH_NOTIFICATIONS,payload:null});var uid=auth.currentUser.uid;onValue(userNotificationsRef(uid),function(snapshot){var data=snapshot.val();if(data){var arr=Object.keys(data).map(function(i){data[i].id=i;return data[i];});dispatch({type:FETCH_NOTIFICATIONS_SUCCESS,payload:arr.reverse()});}else{dispatch({type:FETCH_NOTIFICATIONS_FAILED,payload:\"No data available.\"});}});};};export var fetchNotifications=function fetchNotifications(){return function(dispatch){var notifyRef=firebase.notifyRef;dispatch({type:FETCH_NOTIFICATIONS,payload:null});onValue(notifyRef,function(snapshot){if(snapshot.val()){var data=snapshot.val();var arr=Object.keys(data).map(function(i){data[i].id=i;return data[i];});dispatch({type:FETCH_NOTIFICATIONS_SUCCESS,payload:arr});}else{dispatch({type:FETCH_NOTIFICATIONS_FAILED,payload:\"No data available.\"});}});};};export var editNotifications=function editNotifications(notification,method){return function(dispatch){var notifyRef=firebase.notifyRef,notifyEditRef=firebase.notifyEditRef;dispatch({type:EDIT_NOTIFICATIONS,payload:{method:method,notification:notification}});if(method==='Add'){push(notifyRef,notification);}else if(method==='Delete'){remove(notifyEditRef(notification.id));}else{set(notifyEditRef(notification.id),notification);}};};export var sendNotification=function sendNotification(notification){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch){var users,arr,i,usr,obj,x;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:dispatch({type:SEND_NOTIFICATION,payload:notification});users=store.getState().usersdata.users;if(users){arr=[];for(i=0;i<users.length;i++){usr=users[i];obj={\"to\":null,\"title\":notification.title,\"msg\":notification.body};if(notification.usertype==='All'&&notification.devicetype==='All'){if(usr.pushToken){obj.to=usr.pushToken;arr.push(obj);}}else if(notification.usertype==='All'&&notification.devicetype!=='All'){if(usr.pushToken&&usr.userPlatform===notification.devicetype){obj.to=usr.pushToken;arr.push(obj);}}else if(notification.usertype!=='All'&&notification.devicetype==='All'){if(usr.pushToken&&usr.usertype===notification.usertype){obj.to=usr.pushToken;arr.push(obj);}}else{if(usr.pushToken&&usr.usertype===notification.usertype&&usr.userPlatform===notification.devicetype){obj.to=usr.pushToken;arr.push(obj);}}}if(arr.length>0){for(x=0;x<arr.length;x++){RequestPushMsg(arr[x].to,{title:arr[x].title,msg:arr[x].msg});}dispatch({type:SEND_NOTIFICATION_SUCCESS,payload:arr});}else{dispatch({type:SEND_NOTIFICATION_FAILED,payload:store.getState().languagedata.defaultLanguage.no_user_match});}}else{dispatch({type:SEND_NOTIFICATION_FAILED,payload:store.getState().languagedata.defaultLanguage.no_user_match});}case 3:case\"end\":return _context.stop();}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"names":["FETCH_NOTIFICATIONS","FETCH_NOTIFICATIONS_SUCCESS","FETCH_NOTIFICATIONS_FAILED","EDIT_NOTIFICATIONS","SEND_NOTIFICATION","SEND_NOTIFICATION_SUCCESS","SEND_NOTIFICATION_FAILED","RequestPushMsg","firebase","onValue","set","push","remove","store","fetchUserNotifications","dispatch","auth","userNotificationsRef","type","payload","uid","currentUser","snapshot","data","val","arr","Object","keys","map","i","id","reverse","fetchNotifications","notifyRef","editNotifications","notification","method","notifyEditRef","sendNotification","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","users","usr","obj","x","wrap","_callee$","_context","prev","next","getState","usersdata","length","title","body","usertype","devicetype","pushToken","to","userPlatform","msg","languagedata","defaultLanguage","no_user_match","stop","_x","apply","arguments"],"sources":["/Users/sumitbajaj/Downloads/TAXI-PICK/Sourcecode/common/src/actions/notificationactions.js"],"sourcesContent":["import {\r\n  FETCH_NOTIFICATIONS,\r\n  FETCH_NOTIFICATIONS_SUCCESS,\r\n  FETCH_NOTIFICATIONS_FAILED,\r\n  EDIT_NOTIFICATIONS,\r\n  SEND_NOTIFICATION,\r\n  SEND_NOTIFICATION_SUCCESS,\r\n  SEND_NOTIFICATION_FAILED,\r\n} from \"../store/types\";\r\nimport { RequestPushMsg } from '../other/NotificationFunctions';\r\nimport { firebase } from '../config/configureFirebase';\r\nimport { onValue, set, push, remove } from \"firebase/database\";\r\nimport store from '../store/store';\r\n\r\nexport const fetchUserNotifications = () => (dispatch) => {\r\n\r\n  const {\r\n    auth,\r\n    userNotificationsRef\r\n  } = firebase;\r\n\r\n  dispatch({\r\n    type: FETCH_NOTIFICATIONS,\r\n    payload: null\r\n  });\r\n\r\n  const uid = auth.currentUser.uid;\r\n\r\n  onValue(userNotificationsRef(uid), snapshot => {\r\n    const data = snapshot.val(); \r\n    if(data){\r\n      const arr = Object.keys(data).map(i => {\r\n        data[i].id = i\r\n        return data[i]\r\n      });\r\n      dispatch({\r\n        type: FETCH_NOTIFICATIONS_SUCCESS,\r\n        payload: arr.reverse()\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: FETCH_NOTIFICATIONS_FAILED,\r\n        payload: \"No data available.\"\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport const fetchNotifications = () => (dispatch) => {\r\n\r\n  const {\r\n    notifyRef\r\n  } = firebase;\r\n\r\n  dispatch({\r\n    type: FETCH_NOTIFICATIONS,\r\n    payload: null\r\n  });\r\n  onValue(notifyRef, snapshot => {\r\n    if (snapshot.val()) {\r\n      const data = snapshot.val();\r\n\r\n      const arr = Object.keys(data).map(i => {\r\n        data[i].id = i\r\n        return data[i]\r\n      });\r\n\r\n      dispatch({\r\n        type: FETCH_NOTIFICATIONS_SUCCESS,\r\n        payload: arr\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: FETCH_NOTIFICATIONS_FAILED,\r\n        payload: \"No data available.\"\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport const editNotifications = (notification, method) => (dispatch) => {\r\n  const {\r\n    notifyRef,\r\n    notifyEditRef\r\n  } = firebase;\r\n  dispatch({\r\n    type: EDIT_NOTIFICATIONS,\r\n    payload: { method, notification }\r\n  });\r\n  if (method === 'Add') {\r\n    push(notifyRef, notification);\r\n  } else if (method === 'Delete') {\r\n    remove(notifyEditRef(notification.id));\r\n  } else {\r\n    set(notifyEditRef(notification.id), notification);\r\n  }\r\n}\r\n\r\nexport const sendNotification = (notification) => async (dispatch) => {\r\n\r\n  dispatch({\r\n    type: SEND_NOTIFICATION,\r\n    payload: notification\r\n  });\r\n\r\n  const users = store.getState().usersdata.users;\r\n  if (users) {\r\n    let arr = [];\r\n    for (let i = 0; i < users.length; i++) {\r\n      let usr = users[i];\r\n      let obj = {\r\n        \"to\": null,\r\n        \"title\": notification.title,\r\n        \"msg\": notification.body,\r\n      };\r\n      if (notification.usertype === 'All' && notification.devicetype === 'All') {\r\n        if (usr.pushToken) {\r\n          obj.to = usr.pushToken;\r\n          arr.push(obj);\r\n        }\r\n      } else if (notification.usertype === 'All' && notification.devicetype !== 'All') {\r\n        if (usr.pushToken && usr.userPlatform === notification.devicetype) {\r\n          obj.to = usr.pushToken;\r\n          arr.push(obj);\r\n        }\r\n      } else if (notification.usertype !== 'All' && notification.devicetype === 'All') {\r\n        if (usr.pushToken && usr.usertype === notification.usertype) {\r\n          obj.to = usr.pushToken;\r\n          arr.push(obj);\r\n        }\r\n      } else {\r\n        if (usr.pushToken && usr.usertype === notification.usertype && usr.userPlatform === notification.devicetype) {\r\n          obj.to = usr.pushToken;\r\n          arr.push(obj);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (arr.length > 0) {\r\n      for (let x = 0; x < arr.length; x++) {\r\n        RequestPushMsg(arr[x].to, {\r\n          title: arr[x].title, msg: arr[x].msg\r\n        });\r\n      }\r\n      dispatch({\r\n        type: SEND_NOTIFICATION_SUCCESS,\r\n        payload: arr\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: SEND_NOTIFICATION_FAILED,\r\n        payload: store.getState().languagedata.defaultLanguage.no_user_match,\r\n      });\r\n    }\r\n  } else {\r\n    dispatch({\r\n      type: SEND_NOTIFICATION_FAILED,\r\n      payload: store.getState().languagedata.defaultLanguage.no_user_match,\r\n    });\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}